---
swagger: "2.0"
info:
  description: "RESTful API for MovieShare"
  version: "2021-12-23T17:00:00Z"
  title: "MovieShare API"
host: "localhost:8000"
schemes:
  - "https"
paths:
  /:
    get:
      responses:
        200:
          description: "Check healthy"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Hello MovieShare"
      security:
        - api_key: []
  /movies:
    get:
      parameters:
        - name: "title"
          in: "query"
          required: false
          type: "string"
        - name: "genre"
          in: "query"
          required: false
          type: "string"
        - name: "userId"
          in: "query"
          required: false
          type: "number"
      responses:
        200:
          description: "Get movies"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/movieResponse"
      security:
        - api_key: []
    post:
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/moviePostRequestBody"
      responses:
        200:
          description: "Create a movie"
          schema:
            $ref: "#/definitions/movieResponse"
      security:
        - api_key: []
  /movies/random:
    get:
      responses:
        200:
          description: "Get a movie at random"
          schema:
            $ref: "#/definitions/movieResponse"
      security:
        - api_key: []
  /movies/{id}:
    get:
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "number"
      responses:
        200:
          description: "Get a movie by id"
          schema:
            $ref: "#/definitions/movieResponse"
      security:
        - api_key: []
    put:
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "number"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/moviePutRequestBody" 
      responses:
        200:
          description: "Update a movie by id"
          schema:
            $ref: "#/definitions/movieResponse"
definitions:
  movieResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      userId:
        type: "integer"
        format: "int64"
        example: 1
      title:
        type: "string"
        example: "title"
      overview:
        type: "string"
        example: "overview"
      genre:
        type: "string"
        example: "genre"
      youtubeLinkUrl:
        type: "string"
        example: "https://www.youtube.com/"
      youtubeThumbnailUrl:
        type: "string"
        example: "https://www.youtube.com/"
      grinningScore:
        type: "integer"
        format: "int64"
        example: 5
  moviePostRequestBody:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
        example: 1
      title:
        type: "string"
        example: "title"
      overview:
        type: "string"
        example: "overview"
      genre:
        type: "string"
        example: "genre"
      youtubeLinkUrl:
        type: "string"
        example: "https://www.youtube.com/"
  moviePutRequestBody:
    type: "object"
    properties:
      grinningScore:
        type: "integer"
        format: "int64"
        example: 5
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
